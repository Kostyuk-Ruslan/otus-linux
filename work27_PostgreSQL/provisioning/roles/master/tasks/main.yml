---

  - name: Create a directory .ssh
    file:
      path: /root/.ssh
      state: directory
      mode: '0700'



  
  - name: Copy id_rsa ans authorized_keys
    copy:
      src: files/keys/
      dest: /root/.ssh/
      owner: root
      group: root
      mode: '0600'


  - name: restart sshd
    systemd:
      name: sshd
      state: restarted

 
  - name: add "{{ ip }} {{ dns }}" to hosts
    lineinfile:
      path: /etc/hosts
      state: present
      line: '192.168.11.152  slave'

  - name: add "{{ ip }} {{ dns }}" to hosts
    lineinfile:
      path: /etc/hosts
      state: present
      line: '192.168.11.151  barman'



 

  - name: Add repo postgresql
    yum:
     name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
     state: present      
      

  - name: Add repo mamonsu
    yum:
     name: https://repo.postgrespro.ru/mamonsu/keys/centos.rpm
     state: present      
      


  - name: Add multiple repositories 
    yum_repository:
      name: epel
      description: EPEL YUM repo
      file: external_repos
      baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/
      gpgcheck: no


  - name: Устанавливаем  epel-release
    yum:
     name:
      - epel-release
     state: latest
    tags: install-packages


  - name: Disable SELinux
    selinux:
      state: disabled


  - name: stop and disable firewalld
    systemd:
      name: firewalld
      state: stopped
      enabled: no


  - name: install package
    yum:
     name:
      - net-tools
      - vim
      - zip
      - unzip
      - traceroute
      - mtr
      - mc
      - tcpdump
      - python-psycopg2
      - postgresql11-server
      - postgresql11
      - mamonsu
      - barman-cli



  - name: Инициализируем бд
    shell: /usr/pgsql-11/bin/postgresql-11-setup initdb
    ignore_errors: yes
    


  - name: Copy pg_hba.conf
    template:
      src: pg_hba.conf.j2
      dest: /var/lib/pgsql/11/data/pg_hba.conf
      owner: postgres
      group: postgres
      mode: '0600'


  - name: Copy postgresql.conf
    template:
      src: postgresql.conf.j2
      dest: /var/lib/pgsql/11/data/postgresql.conf
      owner: postgres
      group: postgres
      mode: '0600'


  - name: restart postgresql
    systemd:
      name: postgresql-11
      state: started
      enabled: yes



  - name: check barman user
    become_user: postgres
    command: psql postgres -tAc "SELECT 1 from pg_roles where rolname='{{ barman_username }}'"
    register: barman_user_exists

  - name: create barman user
    become_user: postgres
    command: psql postgres -c "CREATE USER {{ barman_username }} WITH SUPERUSER PASSWORD '{{ barman_password }}'"
    when: barman_user_exists.stdout != "1"

  - name: check streaming user
    become_user: postgres
    command: psql postgres -tAc "SELECT 1 from pg_roles where rolname='{{ streaming_username }}'"
    register: streaming_user_exists

  - name: create streaming user
    become_user: postgres
    command: psql postgres -c "CREATE USER {{ streaming_username }} WITH REPLICATION PASSWORD '{{ streaming_password }}'"
    when: streaming_user_exists.stdout != "1"






#  - name: Create users barman
#    postgresql_user:
#        db: postgres
#        name: barman
#        password: B29z3z4z4z1
#        role_attr_flags: SUPERUSER
#    become: yes


#  - name: get db demo
#    unarhive:
#      src: https://edu.postgrespro.ru/demo_small.zip
#      dest: /tmp
  
#  - name: load db demo
#    shell:  psql -f /tmp/demo_small.sql 

